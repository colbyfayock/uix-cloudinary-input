{"ast":null,"code":"!function (e, n) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? n(exports, require(\"@graphcms/zoid/lib/zoid.js\")) : \"function\" == typeof define && define.amd ? define([\"exports\", \"@graphcms/zoid/lib/zoid.js\"], n) : n((e = e || self).GCUIX = {}, e.zoid);\n}(this, function (e, n) {\n  \"use strict\";\n\n  function o(e, n) {\n    if (null == e) return {};\n    var o,\n        i,\n        r = {},\n        t = Object.keys(e);\n\n    for (i = 0; i < t.length; i++) n.indexOf(o = t[i]) >= 0 || (r[o] = e[o]);\n\n    return r;\n  }\n\n  n = n && Object.prototype.hasOwnProperty.call(n, \"default\") ? n.default : n;\n  var i,\n      r,\n      t,\n      s,\n      d = [\"timeout\", \"window\", \"close\", \"focus\", \"resize\", \"uid\", \"cspNonce\", \"getParent\", \"getParentDomain\", \"hide\", \"show\", \"export\", \"onDisplay\", \"onRendered\", \"onRender\", \"onClose\", \"onDestroy\", \"onResize\", \"onFocus\", \"onError\", \"onProps\"];\n  !function (e) {\n    e.INPUT = \"INPUT\", e.FORM = \"FORM\", e.API = \"API\";\n  }(i || (i = {})), (r = e.FieldExtensionType || (e.FieldExtensionType = {})).STRING = \"STRING\", r.RICHTEXT = \"RICHTEXT\", r.INT = \"INT\", r.FLOAT = \"FLOAT\", r.BOOLEAN = \"BOOLEAN\", r.JSON = \"JSON\", r.DATETIME = \"DATETIME\", r.DATE = \"DATE\", r.LOCATION = \"LOCATION\", r.COLOR = \"COLOR\", r.ENUMERATION = \"ENUMERATION\", r.RELATION = \"RELATION\", r.ASSET = \"ASSET\", r.UNION = \"UNION\", (t = e.FieldExtensionFeature || (e.FieldExtensionFeature = {})).FieldRenderer = \"FieldRenderer\", t.ListRenderer = \"ListRenderer\", t.TableRenderer = \"TableRenderer\", (s = e.VisibilityTypes || (e.VisibilityTypes = {})).READ_WRITE = \"READ_WRITE\", s.READ_ONLY = \"READ_ONLY\", s.HIDDEN = \"HIDDEN\";\n  var a = [\"onProps\", \"onConnected\", \"resize\"],\n      u = [\"onProps\", \"onConnected\"];\n\n  function p(e) {\n    var n = {};\n    return Object.keys(e).forEach(function (o) {\n      d.includes(o) || (o.startsWith(\"_\") && d.includes(o.replace(/^_/g, \"\")) ? n[o.replace(/^_/g, \"\")] = e[o] : n[o] = e[o]);\n    }), n;\n  }\n\n  function c(e) {\n    var i = e.debug,\n        r = e.declaration,\n        t = e.onProps,\n        s = void 0 === t ? function () {} : t,\n        d = e.uid;\n    return new Promise(function (e, t) {\n      if (\"undefined\" == typeof window || void 0 === window.postMessage) return t({\n        error: \"unsupported_env\",\n        message: \"Unsupported environment: Not in a browser supporting PostMessage\"\n      });\n      var c = d || \"undefined\" != typeof URLSearchParams && new URLSearchParams(window.location.search).get(\"extensionUid\");\n      if (!c) return i && console.error(\"[UIX] no uid found in init params or extension URL\"), t({\n        error: \"missing_uid\",\n        message: \"Missing UID: no UID found in init params or extension URL\"\n      });\n\n      if (i && console.info(\"[UIX:\" + c + \"] initializing with uid \" + c), n.create({\n        tag: c,\n        url: window.location.href.toString(),\n        autoResize: {\n          width: !1,\n          height: !0\n        },\n        props: {\n          onConnected: {\n            type: \"function\"\n          }\n        }\n      }), void 0 !== window.xprops) {\n        var l = window.xprops.onConnected;\n        i && console.info(\"[UIX:\" + c + \"] transmitting declaration\", r), l(c, r).then(function (n) {\n          if (!0 === n) {\n            var r = window.xprops,\n                t = r.onProps,\n                d = r.resize,\n                l = o(r, a);\n            i && console.info(\"[UIX:\" + c + \"] initial shared props\", l), t(function (e) {\n              var n = o(e, u);\n              i && console.info(\"[UIX:\" + c + \"] new shared props\", n), \"boolean\" == typeof e.isExpanded && d(e.isExpanded ? {\n                height: \"full\",\n                width: \"100%\"\n              } : {\n                height: \"auto\",\n                width: \"100%\"\n              }), s(p(n));\n            }), i && console.info(\"[UIX:\" + c + \"] initialized\"), s(p(l)), e({\n              status: \"ok\",\n              props: p(l)\n            });\n          } else i && console.info(\"[UIX:\" + c + \"] sdk renderer returned status:\", n), e({\n            status: \"validation\"\n          });\n        });\n      } else i && console.error(\"[UIX] no shared props from host found\"), t({\n        error: \"failed_communication\",\n        message: \"No communication established with host, please check your URL\"\n      });\n    });\n  }\n\n  e.default = {\n    init: c\n  }, e.init = c, e.reservedExtensionProps = d, Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  });\n});","map":{"version":3,"sources":["../src/base.ts","../src/field.ts","../src/index.ts"],"names":["reservedExtensionProps","ExtensionPermission","FieldExtensionType","FieldExtensionFeature","VisibilityTypes","handleProps","props","transformedProps","Object","keys","forEach","key","includes","startsWith","replace","init","debug","declaration","onProps","uid","givenUid","Promise","resolve","reject","window","postMessage","error","message","URLSearchParams","location","search","get","console","info","zoid","create","tag","url","href","toString","autoResize","width","height","onConnected","type","xprops","then","status","onParentProps","_nevermind","resize","extensionProps","p","newExtensionProps","isExpanded"],"mappings":"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","sourcesContent":["// see https://github.com/krakenjs/zoid/blob/master/src/component/props.js#L53\nexport const reservedExtensionProps = [\n  'timeout',\n  'window',\n  'close',\n  'focus',\n  'resize',\n  'uid',\n  'cspNonce',\n  'getParent',\n  'getParentDomain',\n  'hide',\n  'show',\n  'export',\n  'onDisplay',\n  'onRendered',\n  'onRender',\n  'onClose',\n  'onDestroy',\n  'onResize',\n  'onFocus',\n  'onError',\n  'onProps',\n];\n\nexport enum ExtensionPermission {\n  INPUT = 'INPUT',\n  FORM = 'FORM',\n  API = 'API',\n}\n\nexport interface IExtensionDeclaration {\n  name: string;\n  description?: string;\n  permissions?: ExtensionPermission[];\n  config?: Record<ConfigVariableName, ConfigVariableSettings>;\n}\n\ntype ConfigVariableName = string;\n\ntype ConfigVariableSettings = {\n  type: 'string' | 'number' | 'boolean';\n  displayName?: string;\n  description?: string;\n  required?: boolean;\n  defaultValue?: any;\n};\n\nexport type ConfigFields = Record<ConfigVariableName, ConfigVariableSettings>;\n\nexport interface ExtensionPropsBase {\n  extension: {\n    config: Record<string, any>;\n    status: 'connected' | 'connecting' | 'error' | 'disconnected';\n  };\n  isExpanded: boolean;\n  expand: (expand: boolean | ((isExpanded: boolean) => boolean)) => unknown;\n  context: {\n    project: {\n      id: string;\n      name: string;\n      mgmtApi: string;\n      mgmtToken: string;\n    };\n    environment: {\n      id: string;\n      name: string;\n      endpoint: string;\n      authToken: string;\n    };\n  };\n\n  openDialog: <DialogReturn = any, DialogProps = Record<string, any>>(\n    src: string,\n    props?: {\n      disableOverlayClick?: boolean;\n      maxWidth?: string;\n      ariaLabel?: string;\n    } & DialogProps\n  ) => Promise<DialogReturn | null>;\n}\n\nexport interface ExtensionDialogProps extends ExtensionPropsBase {\n  onCloseDialog: (value: any) => void;\n}\n","import type {\n  FormState,\n  FieldState,\n  FieldSubscription,\n  Subscriber,\n  FormSubscription,\n} from './type-helpers/form';\n\nimport type {\n  IExtensionDeclaration,\n  ConfigFields,\n  ExtensionPropsBase,\n} from './base';\n\nexport enum FieldExtensionType {\n  STRING = 'STRING',\n  RICHTEXT = 'RICHTEXT',\n  INT = 'INT',\n  FLOAT = 'FLOAT',\n  BOOLEAN = 'BOOLEAN',\n  JSON = 'JSON',\n  DATETIME = 'DATETIME',\n  DATE = 'DATE',\n  LOCATION = 'LOCATION',\n  COLOR = 'COLOR',\n  ENUMERATION = 'ENUMERATION',\n  RELATION = 'RELATION',\n  ASSET = 'ASSET',\n  UNION = 'UNION',\n}\n\nexport enum FieldExtensionFeature {\n  FieldRenderer = 'FieldRenderer',\n  ListRenderer = 'ListRenderer',\n  TableRenderer = 'TableRenderer',\n}\n\nexport enum VisibilityTypes {\n  /** Field can be read and edited */\n  READ_WRITE = 'READ_WRITE',\n  /** Field is shown but can't be edited in the UI, only through the API */\n  READ_ONLY = 'READ_ONLY',\n  /** Field is not shown, but can be used by other fields */\n  HIDDEN = 'HIDDEN',\n}\n\nexport type VisibilityMap = { [fieldApiId: string]: VisibilityTypes };\nexport interface Asset {\n  createdAt: string;\n  fileName: string;\n  handle: string;\n  height?: number;\n  id: string;\n  mimeType?: string;\n  size?: number;\n  updatedAt: string;\n  url: string;\n  width?: number;\n}\n\nexport interface FieldExtensionDeclaration extends IExtensionDeclaration {\n  extensionType: 'field';\n  fieldType: FieldExtensionType;\n  /**\n   * Extension capabilities\n   */\n  features: FieldExtensionFeature[];\n  fieldConfig?: ConfigFields;\n  listConfig?: ConfigFields;\n  tableConfig?: ConfigFields;\n}\n\nexport interface FieldExtensionProps extends ExtensionPropsBase {\n  // name of the field in the form (may differ from the field apiId, ie. for localized fields)\n  name: string;\n\n  // current locale on localized field\n  locale?: string;\n\n  // current entry id, null for new entries;\n  entryId: string | null;\n\n  isTableCell: boolean;\n\n  isReadOnly?: boolean;\n\n  value: any;\n\n  onBlur: (event?: FocusEvent) => Promise<void>;\n\n  onChange: (event: InputEvent) => Promise<void>;\n\n  onFocus: (event?: FocusEvent) => Promise<void>;\n\n  // @see https://final-form.org/docs/react-final-form/types/FieldRenderProps\n  meta: {\n    active: boolean;\n    error: any;\n    touched: boolean;\n  };\n\n  /**\n   * @deprecated use `expand` instead\n   */\n  expandField?: (expand: boolean) => unknown;\n\n  openAssetPicker: () => Promise<null | (Asset & Record<string, unknown>)>;\n\n  form: {\n    change: <Value = any>(name: string, value: Value) => Promise<void>;\n    getState: <Values = Record<string, any>>() => Promise<FormState<Values>>;\n    getFieldState: <Value = any>(\n      fieldName: string\n    ) => Promise<FieldState<Value>>;\n    subscribeToFieldState: <Value = any>(\n      name: string,\n      callback: (state: FieldState<Value>) => any,\n      subscription: FieldSubscription\n    ) => Promise<() => any>;\n    subscribeToFormState: <Values = Record<string, any>>(\n      callback: Subscriber<FormState<Values>>,\n      subscription: FormSubscription\n    ) => Promise<() => any>;\n  };\n  field: {\n    id: string;\n    apiId: string;\n    description: string | null;\n    displayName: string;\n    isList: boolean;\n    isLocalized?: boolean;\n    isRequired?: boolean;\n    isUnique?: boolean;\n    type: FieldExtensionType;\n  };\n  model: {\n    apiId: string;\n    apiIdPlural: string;\n    id: string;\n    description: string | null;\n    displayName: string;\n    isLocalized: boolean;\n  };\n  setFieldsVisibility: (\n    arg:\n      | VisibilityMap\n      | ((currentVisibilityMap: VisibilityMap) => VisibilityMap)\n  ) => void;\n  /**\n   * Saved instance config of the following shape\n   * `{ [key in FieldExtensionDeclaration['fieldConfig']]: value }`\n   */\n  fieldConfig?: Record<string, boolean | number | string | undefined | null>;\n  tableConfig?: Record<string, boolean | number | string | undefined | null>;\n}\n","import zoid from '@graphcms/zoid/lib/zoid.js';\n\nimport { ExtensionDialogProps, reservedExtensionProps } from './base';\nexport { ExtensionDialogProps, reservedExtensionProps } from './base';\nimport type { FieldExtensionDeclaration, FieldExtensionProps } from './field';\nimport type {\n  FormSidebarExtensionDeclaration,\n  FormSidebarExtensionProps,\n} from './formSidebar';\n\nexport type {\n  FormSidebarExtensionDeclaration,\n  FormSidebarExtensionProps,\n} from './formSidebar';\n\nexport type {\n  FormState,\n  FieldState,\n  FieldSubscription,\n  Subscriber,\n  FormSubscription,\n} from './type-helpers/form';\n\nexport type { FieldExtensionDeclaration, FieldExtensionProps, VisibilityMap } from './field';\n\nexport { FieldExtensionFeature, FieldExtensionType, VisibilityTypes } from './field';\n\nexport type ExtensionProps =\n  | FieldExtensionProps\n  | FormSidebarExtensionProps\n  | ExtensionDialogProps;\n\ntype Xprops = {\n  onProps: (props: Record<string, any>) => void;\n  onConnected: (\n    uid: string,\n    declaration: ExtensionDeclaration\n  ) => Promise<unknown>;\n  resize: (size: {\n    height: 'auto' | 'full' | number;\n    width: 'auto' | '100%' | number;\n  }) => unknown;\n} & ExtensionProps;\n\ndeclare global {\n  interface Window {\n    xprops: Xprops;\n  }\n}\n\nexport type ExtensionDeclaration =\n  | FieldExtensionDeclaration\n  | FormSidebarExtensionDeclaration;\n\nfunction handleProps(props: any) {\n  const transformedProps: any = {};\n  Object.keys(props).forEach((key: string) => {\n    // do not pass down zoid props to the extension\n    if (reservedExtensionProps.includes(key)) return;\n\n    // transform props that were prefixed with '_' to bypass zoid reverved porps\n    if (\n      key.startsWith('_') &&\n      reservedExtensionProps.includes(key.replace(/^_/g, ''))\n    ) {\n      transformedProps[key.replace(/^_/g, '')] = props[key];\n    } else {\n      transformedProps[key] = props[key];\n    }\n  });\n  return transformedProps;\n}\n\nexport type DeclarationRelativeProps<T> = T extends FieldExtensionDeclaration\n  ? FieldExtensionProps\n  : T extends FormSidebarExtensionDeclaration\n  ? FormSidebarExtensionProps\n  : ExtensionProps;\n\nexport function init<Declaration>({\n  debug,\n  declaration,\n  onProps = () => undefined,\n  uid: givenUid,\n}: {\n  declaration: ExtensionDeclaration;\n  onProps: (props: ExtensionProps) => unknown;\n  debug?: boolean;\n  uid?: string;\n}) {\n  return new Promise<\n    | { status: 'ok'; props: DeclarationRelativeProps<Declaration> }\n    | { status: 'validation' }\n  >((resolve, reject) => {\n    if (\n      typeof window === 'undefined' ||\n      typeof window.postMessage === 'undefined'\n    ) {\n      return reject({\n        error: 'unsupported_env',\n        message:\n          'Unsupported environment: Not in a browser supporting PostMessage',\n      });\n    }\n\n    const uid =\n      givenUid ||\n      (typeof URLSearchParams !== 'undefined' &&\n        new URLSearchParams(window.location.search).get('extensionUid'));\n\n    if (!uid) {\n      if (debug)\n        console.error(`[UIX] no uid found in init params or extension URL`);\n      return reject({\n        error: 'missing_uid',\n        message: 'Missing UID: no UID found in init params or extension URL',\n      });\n    }\n    if (debug) console.info(`[UIX:${uid}] initializing with uid ${uid}`);\n\n    zoid.create({\n      tag: uid,\n      url: window.location.href.toString(),\n      autoResize: {\n        width: false,\n        height: true,\n      },\n      props: {\n        onConnected: {\n          type: 'function',\n        },\n      },\n    });\n    if (typeof window.xprops !== 'undefined') {\n      const { onConnected, onProps: initialOnProps } = window.xprops;\n      if (debug) {\n        console.info(`[UIX:${uid}] transmitting declaration`, declaration);\n      }\n      onConnected(uid, declaration).then((status) => {\n        if (status === true) {\n          const {\n            onProps: onParentProps,\n            onConnected: _nevermind,\n            resize,\n            ...extensionProps\n          } = window.xprops;\n\n          if (debug)\n            console.info(`[UIX:${uid}] initial shared props`, extensionProps);\n          onParentProps((p: Xprops) => {\n            const {\n              onProps: onParentProps,\n              onConnected,\n              ...newExtensionProps\n            } = p;\n            if (debug)\n              console.info(`[UIX:${uid}] new shared props`, newExtensionProps);\n            if (typeof p.isExpanded === 'boolean') {\n              p.isExpanded\n                ? resize({ height: 'full', width: '100%' })\n                : resize({ height: 'auto', width: '100%' });\n            }\n            onProps(handleProps(newExtensionProps));\n          });\n\n          if (debug) console.info(`[UIX:${uid}] initialized`);\n          onProps(handleProps(extensionProps));\n          resolve({ status: 'ok', props: handleProps(extensionProps) });\n        } else {\n          if (debug)\n            console.info(`[UIX:${uid}] sdk renderer returned status:`, status);\n          resolve({ status: 'validation' });\n        }\n      });\n    } else {\n      if (debug) console.error(`[UIX] no shared props from host found`);\n      reject({\n        error: 'failed_communication',\n        message:\n          'No communication established with host, please check your URL',\n      });\n    }\n  });\n}\n\nexport default { init };\n"]},"metadata":{},"sourceType":"script"}